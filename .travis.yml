jobs:
  include:
  - stage: Pre-built Test
    language: node_js
    node_js:
    - node
    cache:
      directories:
      - node_modules
  - stage: Test
    script:
    - echo "Building test image and running tests"
    - docker build -t $DOCKER_USERNAME/express-mongodb-boilerplate-test --build-arg "SOURCE_COMMIT=$(git rev-parse HEAD)" -f Dockerfile.test .
    - docker run --rm $DOCKER_USERNAME/express-mongodb-boilerplate-test
  - stage: Build and Publish
    script:
    - echo "Building production image"
    - export LAST_COMMIT_SHA="${LAST_COMMIT_SHA:-$(git rev-parse HEAD)}"
    - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker build -t $DOCKER_USERNAME/express-mongodb-boilerplate --build-arg "SOURCE_COMMIT=$(git rev-parse HEAD)" .
    - docker images
    - echo "Publishing to docker registry"
    - docker tag  $DOCKER_USERNAME/express-mongodb-boilerplate $DOCKER_USERNAME/express-mongodb-boilerplate
    - docker push $DOCKER_USERNAME/express-mongodb-boilerplate
env:
  global:
  - secure: BOXfC4k7sxAK6c+I4jjksX4mNtyNz4dsVfQmRAhYluZnbYllOuj6P27C6FcH1mSWNS90fP9ojJ9V3QS0/USjSmPXEXg6dDXR3y2yHe8WjoAEGZMtCdapnCatypew8m5XDh9OHcKj+xuAvFwvQd1MtFPxF3zdZYhlgetmgT3C8EfXS5YDOCAvordWOYTdjjxVGgVaHl/8RsD/nZWm/Lc4Sj7UjCLuehWczuqiEdKPwUQXzrRhtd+yuiwu6lVwtcKUk7x8RFjcD6RcTGQdzTmWlvyuJjyKEQ7kLJ1lCWZNE0tN1VhQO7u/+bW5FttQDbZEpcvpvmCmjBwj/2i/6wLUzkemnfDPn5czlfv9FHicEPoge7ADDThd8se5LdcfFWj7YUJj++FwmAlXuhHJ3OcAd94G4mOH5zzf5ecWUP5RpFg1R61dxAL39nR0LZm7wY7F4Wb2yFUOtet2yBNDUhaZtfJdUkNGNHGV/dU12iC0dHnzB4yd7ii46a8XHmvzVFahoJ+2cRZx9dR1a+AkZiESQCTTMD5RzLcOT1xmKbXZW+lHlhqVOXKcSuvCn7XrW1mirGb2Be+Du3u3kfDsr9Ynq/B3ZhXsNrJ8vQo96AZ4uOjuUsQlGf9QJ1tuJwDYteQ5Z9fEwVDDJJl6oTdWurmGxnwWvvQ8ngRT1QbiNzlbzgQ=
  - secure: kRvIKT3fnCXBFnHLupYgj7CLPmIPfdX/c+UeSayyWZ+tPerdIIdz4JpcbdCnH8qenuaLmQs4Ek7Wxd52dSf3bYjeFrO8rIOLWz0vAm0ztTo9tNd2aE86p9GdMhRjL3FG39uN5a28rzpUzocdEQoeH2BGn0/6w9EXi/nhm5NJD2NL5JJfuidQHnlOdClGVKsNfCRgIX0y2hmBdmK0S+AecU9bPg/5aLkAe5qLN0i71GTTrOlnEU8wBM190t88xgAkJzoKKtg1w0OEybW/siPwnpMOjlVt4T+rNaf+pu9scrpX0MgU2G76OU0d6wUSSqDOWcFon9tfGQvaUAavphfZ5/tVjG0hTnVmZxDLATCxAEeOOyNOb376vWUKmSu1V+0IgAo1MX9z4s9lv825hPFyTxIxaf/9mg3zZtZ2j7KfAnawQRpgMkhtg3eeq0s802+fgkr80kLB8LkEtvFicljwebR42mP9SE6p3ne3De33b6csTqrpKJhDdSRBV0xaiROZGScA8g27K7714DDDciUbMnkqC51Ukv+Ncuc+G5YF+mz9R8mhQYiqbg/2I2DIGRsH/Fr9aVLULXW4sQ9Vc+Q4n6mx8+2uLETxNH/Qndhaqg33LWfIAemyw3Ghptvco4mzoxL4peO6P/EKB350H7drkXT8GvnPyWqFjLv6FnTXKio=
